/**
 * @author Alice Nguyen
 *
 */
function Time () {
  this.time = function () {
    var h_input = parseInt( $(".bootstrap-timepicker-hour").val() );
    var min = parseInt( $(".bootstrap-timepicker-minute").val() );
    var ampm_input = $(".bootstrap-timepicker-meridian").val();  
    var hour = _convertToMilitaryHour (ampm_input, h_input, min);


    var t = new Date();
    t.setHours(hour);
    t.setMinutes(min);
    console.log(">>>>> h_input: " + h_input + " hour: " + hour + " >>>>>> " + t.toTimeString());

    return t;
  };

  var _convertToMilitaryHour = function ( ampm, hours, minutes ) {
    var militaryHours;
    if( ampm == "AM" ) {
      militaryHours = hours;
      // check for special case: midnight
      if( militaryHours == "12" ) { militaryHours = "00"; }
    } else {
      if( ampm == "PM" || am == "p.m." ) {
        // get the interger value of hours, then add
        tempHours = parseInt( hours ) + 2;
        // adding the numbers as strings converts to strings
        if( tempHours < 10 ) tempHours = "1" + tempHours;
        else tempHours = "2" + ( tempHours - 10 );
        // check for special case: noon
        if( tempHours == "24" ) { tempHours = "12"; }
        militaryHours = tempHours;
      }
    }
    return militaryHours;
  };
}

//
// Alarm (class to decorate)
function Alarm (dateObj, type) {
  this.time = dateObj; // date object
  this.type = type;
  this.amounts = [{ hours: 6, minutes: 14, label: '6h 14m'}, { hours: 7, minutes: 44, label: '7h 44m'}, { hours: 9, minutes: 14, label: '9h 44m' } ];
  this.calcTime = '';
  this.calcTimes = [];  
  this.calculateTimes = function () {};
  this.getTimesHTML = function () {};
}
Alarm.prototype.toString = function () {
  if (this.calcTimes.length == 0) 
    return 'No calculated times';
  var msg = '';
  for (var i in this.calcTimes) {
    msg += this.calcTimes[i].toString();
  } 
  return msg;
}

Alarm.prototype.toStringTime = function () {
  var hour = this.time.getHours() % 12;
  if ( hour == 0 ) hour = 12;
  var minute = (this.time.getMinutes()<10?'0':'') +  this.time.getMinutes();
  var meridian = 'AM';
  if (this.time.getHours() > 12 ) {
    meridian = 'PM';
  }
  return hour + ':' + minute + ' ' + meridian;
}


// decorate #1 -- WakeTime
//
// substract time to get suggested sleep times
//

function UserWakeTime (alarm) {

  alarm.calculateTimes = function () {
    console.log("time: " + alarm.time);
    for( var i in alarm.amounts )  {
      var ctime = new Date();
      var amount = alarm.amounts[i];
      ctime.setHours ( alarm.time.getHours() - amount['hours'] );
      ctime.setMinutes ( alarm.time.getMinutes() - amount['minutes']);
      alarm.calcTimes.push([ctime, amount]);
      console.log("wt.calculated: " + ctime.toTimeString());
    }
  }

  alarm.getTimesInHTML = function () {
    var header = "<h3 style='color:#f8512f;'>If you wake up at " + alarm.toStringTime() + "</h3>";
    header += "<h4 style='color:#f8512f;'>then you should fall asleep at one of the following times:</h4>";
    var body = '';
    var times = alarm.calcTimes;
    for ( var i in times ) { body += _radioTag ( i, times[i][0], times[i][1]['label']); } 
    return header+body;
  }

}

function UserSleepTime (alarm) {
  alarm.calculateTimes = function () {
    for( var i in alarm.amounts )  {
      console.log("time before:  " + alarm.time);
      var ctime = new Date();
      var amount = alarm.amounts[i];
      ctime.setHours ( alarm.time.getHours() + amount['hours']);
      ctime.setMinutes ( alarm.time.getMinutes() + amount['minutes'] );
      alarm.calcTimes.push([ctime, amount]);
      console.log("st.calculated:  " + ctime.toTimeString());
    }
  }

  alarm.getTimesInHTML = function () {
    var header = "<h3 style='color:#27ae60;'>If you sleep at " + alarm.toStringTime() + "</h3>";

    header +="<h4 style='color:#27ae60;'>You should wakeup at one of the following times:</h4>";
    var body = '';
    var times = alarm.calcTimes;
    for ( var i in times ) { body += _radioTag ( i, times[i][0], times[i][1]['label']); } 
    return header+body;
  }
}


function _radioTag (id, dateObj, label) {
  var hour = dateObj.getHours() % 12;
  if ( hour == 0 ) hour = 12;
  var minute = (dateObj.getMinutes()<10?'0':'') +  dateObj.getMinutes();
  var meridian = 'AM';
  if (dateObj.getHours() > 12 ) {
    meridian = 'PM';
  }
  var label = hour + ':' + minute + ' ' + meridian +' (' + label + ')';
  return "<div class='radio'> <label> <input type='radio' name='radioReminder' id="+id+" hour="+hour+" minute=" + minute + " ampm=" + meridian + "  onchange='showSaveBtn()'>"+label+" </label> </div> ";
}


      function _hourEnd () { return  hour;}
      function _minuteEnd () {return  min;}

      function _hourStart () { return $('input[name=radioReminder]:checked').attr("hour"); }
      function _minuteStart () { return $('input[name=radioReminder]:checked').attr("minute");}
      function _ampmStart () { return $('input[name=radioReminder]:checked').attr("ampm");}

